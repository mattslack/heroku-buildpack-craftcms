#!/bin/bash
# Usage: bin/compile BUILD_DIR CACHE_DIR ENV_DIR

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR=$(cd $(dirname $0); cd ..; pwd)
mkdir -p ${BUILD_DIR} ${CACHE_DIR}

# START CONFIG
# Support end-user configured CRAFT_VERSION, and CRAFT_BUILD
# This way, end-users can choose exactly which versions to run with.


CRAFT_URL="https://craftcms.com/latest-v3.zip"
CRAFT_DIR="${CACHE_DIR}/Craft-v3"

# Default NGINX Config
echo "-----> Setting up NGINX"
if [ ! -f "$BUILD_DIR/nginx_app.conf" ]; then
  echo "       Installing default nginx_app.conf"
  cp ${BUILDPACK_DIR}/bin/util/nginx_app.conf ${BUILD_DIR}/nginx_app.conf
else
  echo "       Using config in app"
fi

# Install imagick
#echo "-----> Installing the PECL imagick extension"
#pear config-set php_ini /app/.heroku/php/etc/php/php.ini
#pecl config-set php_ini /app/.heroku/php/etc/php/php.ini
#pecl install imagick

# Default Composer.json
echo "-----> Setting up Composer"
if [ ! -f "$BUILD_DIR/composer.json" ]; then
  echo "       Installing default composer.json"
  cp ${BUILDPACK_DIR}/bin/util/composer.json ${BUILD_DIR}/composer.json
else
  echo "       Using config in app"
fi

# Default Procfile
cd ${BUILD_DIR}

if [[ ! -f "Procfile" ]]; then
  echo "web: bin/start.sh" > Procfile
  echo "No Procfile, using 'web: bin/start.sh'."
fi

# Setup Script
mkdir -p ${BUILD_DIR}/bin
cd ${BUILD_DIR}

if [[ ! -f "./bin/start.sh" ]]; then
  echo "web: bin/start.sh" > Procfile
  notice_inline "No start script, creating bin/start.sh'."
  cat >>bin/start.sh <<EOF
  #!/usr/bin/env bash
  # Write directories if not there
  mkdir -p ./config ./storage ./vendor
  mkdir -p ./storage/logs ./storage/runtime ./storage/backups
  # Write proper directory permissions
  chmod -R 774 {config,storage,web}
  ./craft migrate/all
  # Start NGINX
  vendor/bin/heroku-php-nginx -C nginx_app.conf web
EOF
fi

chmod +x bin/start.sh
